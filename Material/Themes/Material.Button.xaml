<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Material.Fonts.xaml"/>
  <ResourceDictionary Source="Material.Shadows.xaml"/>
  <ResourceDictionary Source="Material.Palette.xaml"/>
  <ResourceDictionary Source="Material.DefinedBrushes.xaml"/>
 </ResourceDictionary.MergedDictionaries>

 <!--<Style x:Key="RaisedButton" TargetType="{x:Type Button}" BasedOn="{StaticResource t14pButton}">
  <Setter Property="Foreground" Value="{StaticResource mtGrey50}"/>
  <Setter Property="Background">
   <Setter.Value>
    <Binding Path="(primitives:ThemePrimitive.Theme).P600" FallbackValue="{StaticResource mtTeal600}"/>
   </Setter.Value>
  </Setter>
  <Setter Property="BorderThickness" Value="0"/>
  <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
  <Setter Property="Padding" Value="30 10"/>
  <Setter Property="MinWidth" Value="64"/>
  <Setter Property="Template">
   <Setter.Value>
    <ControlTemplate TargetType="{x:Type Button}">
     <Border Background="{TemplateBinding Background}" CornerRadius="2">
      <VisualStateManager.VisualStateGroups>
       <VisualStateGroup Name="CommonStates">
        <VisualState Name="Normal">
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="PART_shadow" Storyboard.TargetProperty="BlurRadius" To="8"
																											Duration="0:0:0.2"/>
          <DoubleAnimation Storyboard.TargetName="PART_shadow" Storyboard.TargetProperty="ShadowDepth" To="1.5"
																											Duration="0:0:0.2"/>
          <DoubleAnimation Storyboard.TargetName="PART_mouseoverbrush" Storyboard.TargetProperty="Opacity" To="0"
																											Duration="0:0:0.2"/>

         </Storyboard>
        </VisualState>
        <VisualState Name="MouseOver">
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="PART_shadow" Storyboard.TargetProperty="BlurRadius" To="14"
																											Duration="0:0:0.2"/>
          <DoubleAnimation Storyboard.TargetName="PART_shadow" Storyboard.TargetProperty="ShadowDepth" To="4.5"
																											Duration="0:0:0.2"/>
          <DoubleAnimation Storyboard.TargetName="PART_mouseoverbrush" Storyboard.TargetProperty="Opacity" To=".1"
																											Duration="0:0:0.2"/>

         </Storyboard>
        </VisualState>
        <VisualState Name="Pressed">
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="PART_shadow" Storyboard.TargetProperty="BlurRadius" To="14"
																											Duration="0:0:0.2"/>
          <DoubleAnimation Storyboard.TargetName="PART_shadow" Storyboard.TargetProperty="ShadowDepth" To="4.5"
																											Duration="0:0:0.2"/>
          <DoubleAnimation Storyboard.TargetName="PART_mouseoverbrush" Storyboard.TargetProperty="Opacity" To=".1"
																											Duration="0:0:0.2"/>

         </Storyboard>
        </VisualState>
        <VisualState Name="Disabled">
         <Storyboard>

         </Storyboard>
        </VisualState>
       </VisualStateGroup>
       <VisualStateGroup Name="FocusStates">
        <VisualState Name="Focused">
         <Storyboard>

         </Storyboard>
        </VisualState>
        <VisualState Name="Unfocused">
         <Storyboard>

         </Storyboard>
        </VisualState>

       </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border.Effect>
       <DropShadowEffect x:Name="PART_shadow" BlurRadius="8" ShadowDepth="1.5" Direction="270" 
																									Color="{StaticResource MaterialDesignShadow}" Opacity=".42"/>
      </Border.Effect>
      <Grid ClipToBounds="True">
       <i:Interaction.Behaviors>
        <converters:MouseTrackingBehavior/>
       </i:Interaction.Behaviors>
       <Grid.Background>
        <SolidColorBrush x:Name="PART_mouseoverbrush" Opacity="0" Color="White"/>
       </Grid.Background>
       <Canvas>
        <Canvas.RenderTransform>
         <TranslateTransform>
          <TranslateTransform.X>
           <MultiBinding Converter="{converters:RipplePlacementConverter}" ConverterParameter="{x:Static converters:Placement.X}" FallbackValue="0">
            <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="(converters:Ripple.MousePosition)" RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}">
             <Binding.FallbackValue>
              <Point X="0" Y="0"/>
             </Binding.FallbackValue>
            </Binding>
           </MultiBinding>
          </TranslateTransform.X>
          <TranslateTransform.Y>
           <MultiBinding Converter="{converters:RipplePlacementConverter}" ConverterParameter="{x:Static converters:Placement.Y}" FallbackValue="0">
            <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="(converters:Ripple.MousePosition)" RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}">
             <Binding.FallbackValue>
              <Point X="0" Y="0"/>
             </Binding.FallbackValue>
            </Binding>
           </MultiBinding>
          </TranslateTransform.Y>
         </TranslateTransform>
        </Canvas.RenderTransform>
        <Ellipse x:Name="PART_ripple" RenderTransformOrigin=".5,.5" VerticalAlignment="Center" HorizontalAlignment="Center ">
         <Ellipse.RenderTransform>
          <ScaleTransform x:Name="PART_ripplescale" ScaleX="0" ScaleY="0" />
         </Ellipse.RenderTransform>
         <Ellipse.Fill>
          <SolidColorBrush Color="White" Opacity=".3"/>
         </Ellipse.Fill>
         <Ellipse.Width>
          <MultiBinding Converter="{converters:CircleDiameterFitConverter}">
           <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
           <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
          </MultiBinding>
         </Ellipse.Width>
         <Ellipse.Height>
          <MultiBinding Converter="{converters:CircleDiameterFitConverter}">
           <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
           <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
          </MultiBinding>
         </Ellipse.Height>
        </Ellipse>
       </Canvas>
       <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
      </Grid>
     </Border>
     <ControlTemplate.Triggers>
      <EventTrigger RoutedEvent="Click">
       <BeginStoryboard>
        <Storyboard>
         <DoubleAnimation Storyboard.TargetName="PART_ripplescale" Storyboard.TargetProperty="ScaleX" From="0" To="1"
																											Duration="0:0:0.6" EasingFunction="{Ease Out, Quad}"/>

         <DoubleAnimation Storyboard.TargetName="PART_ripplescale" Storyboard.TargetProperty="ScaleY" From="0" To="1"
																											Duration="0:0:0.6" EasingFunction="{Ease Out, Quad}"/>

         <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ripple" Storyboard.TargetProperty="Opacity">
          <SplineDoubleKeyFrame Value="0" KeyTime="0:0:0.00"/>
          <SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.10"/>
          <SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.60"/>
          <SplineDoubleKeyFrame Value="0" KeyTime="0:0:0.75"/>
         </DoubleAnimationUsingKeyFrames>

        </Storyboard>
       </BeginStoryboard>
      </EventTrigger>
     </ControlTemplate.Triggers>
    </ControlTemplate>
   </Setter.Value>
  </Setter>
 </Style>

 <Style x:Key="FlatButton" TargetType="{x:Type Button}" BasedOn="{StaticResource t14pButton}">
  <Setter Property="Foreground" Value="{StaticResource mtGrey50}"/>
  <Setter Property="Background" Value="Transparent"/>
  <Setter Property="BorderThickness" Value="0"/>
  <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
  <Setter Property="Padding" Value="30 10"/>
  <Setter Property="MinWidth" Value="64"/>
  <Setter Property="Template">
   <Setter.Value>
    <ControlTemplate TargetType="{x:Type Button}">
     <Border Background="{TemplateBinding Background}" CornerRadius="2">
      <VisualStateManager.VisualStateGroups>
       <VisualStateGroup Name="CommonStates">
        <VisualState Name="Normal">
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="PART_mouseoverbrush" Storyboard.TargetProperty="Opacity" To="0"
																											Duration="0:0:0.2"/>

         </Storyboard>
        </VisualState>
        <VisualState Name="MouseOver">
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="PART_mouseoverbrush" Storyboard.TargetProperty="Opacity" To=".1"
																											Duration="0:0:0.2"/>

         </Storyboard>
        </VisualState>
        <VisualState Name="Pressed">
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="PART_mouseoverbrush" Storyboard.TargetProperty="Opacity" To=".1"
																											Duration="0:0:0.2"/>

         </Storyboard>
        </VisualState>
        <VisualState Name="Disabled">
         <Storyboard>

         </Storyboard>
        </VisualState>
       </VisualStateGroup>
       <VisualStateGroup Name="FocusStates">
        <VisualState Name="Focused">
         <Storyboard>

         </Storyboard>
        </VisualState>
        <VisualState Name="Unfocused">
         <Storyboard>

         </Storyboard>
        </VisualState>

       </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid ClipToBounds="True">
       <i:Interaction.Behaviors>
        <converters:MouseTrackingBehavior/>
       </i:Interaction.Behaviors>
       <Grid.Background>
        <SolidColorBrush x:Name="PART_mouseoverbrush" Opacity="0" Color="White"/>
       </Grid.Background>
       <Canvas>
        <Canvas.RenderTransform>
         <TranslateTransform>
          <TranslateTransform.X>
           <MultiBinding Converter="{converters:RipplePlacementConverter}" ConverterParameter="{x:Static converters:Placement.X}">
            <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="(converters:Ripple.MousePosition)" RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}"/>
           </MultiBinding>
          </TranslateTransform.X>
          <TranslateTransform.Y>
           <MultiBinding Converter="{converters:RipplePlacementConverter}" ConverterParameter="{x:Static converters:Placement.Y}">
            <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="(converters:Ripple.MousePosition)" RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}"/>
           </MultiBinding>
          </TranslateTransform.Y>
         </TranslateTransform>
        </Canvas.RenderTransform>
        <Ellipse x:Name="PART_ripple" RenderTransformOrigin=".5,.5" VerticalAlignment="Center" HorizontalAlignment="Center ">
         <Ellipse.RenderTransform>
          <ScaleTransform x:Name="PART_ripplescale" ScaleX="0" ScaleY="0" />
         </Ellipse.RenderTransform>
         <Ellipse.Fill>
										<Binding RelativeSource="{RelativeSource TemplatedParent}"  Path="(primitives:VisualFeedback.Brush)"/>
          --><!--<SolidColorBrush Color="{Binding VisualFeedback.ClickFeedback}" Opacity="1"/>--><!--
         </Ellipse.Fill>
         <Ellipse.Width>
          <MultiBinding Converter="{converters:CircleDiameterFitConverter}">
           <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
           <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
          </MultiBinding>
         </Ellipse.Width>
         <Ellipse.Height>
          <MultiBinding Converter="{converters:CircleDiameterFitConverter}">
           <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
           <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
          </MultiBinding>
         </Ellipse.Height>
        </Ellipse>
       </Canvas>
       <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
      </Grid>
     </Border>
     <ControlTemplate.Triggers>
      <EventTrigger RoutedEvent="Click">
       <BeginStoryboard>
        <Storyboard>
         <DoubleAnimation Storyboard.TargetName="PART_ripplescale" Storyboard.TargetProperty="ScaleX" From="0" To="1"
																											Duration="0:0:0.6" EasingFunction="{Ease Out, Quad}"/>

         <DoubleAnimation Storyboard.TargetName="PART_ripplescale" Storyboard.TargetProperty="ScaleY" From="0" To="1"
																											Duration="0:0:0.6" EasingFunction="{Ease Out, Quad}"/>

         <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ripple" Storyboard.TargetProperty="Opacity">
          <SplineDoubleKeyFrame Value="0" KeyTime="0:0:0.00"/>
          <SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.10"/>
          <SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.60"/>
          <SplineDoubleKeyFrame Value="0" KeyTime="0:0:0.75"/>
         </DoubleAnimationUsingKeyFrames>

        </Storyboard>
       </BeginStoryboard>
      </EventTrigger>
     </ControlTemplate.Triggers>
    </ControlTemplate>
   </Setter.Value>
  </Setter>
 </Style>

 <Style x:Key="FlatButtonDarkSurface" TargetType="{x:Type Button}" BasedOn="{StaticResource t14pButton}">
  <Setter Property="Foreground" Value="{StaticResource mtGrey50}"/>
  <Setter Property="Background" Value="Transparent"/>
  <Setter Property="BorderThickness" Value="0"/>
  <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
  <Setter Property="Padding" Value="30 10"/>
  <Setter Property="MinWidth" Value="64"/>
  <Setter Property="Template">
   <Setter.Value>
    <ControlTemplate TargetType="{x:Type Button}">
     <Border Background="{TemplateBinding Background}" CornerRadius="2">
      <VisualStateManager.VisualStateGroups>
       <VisualStateGroup Name="CommonStates">
        <VisualState Name="Normal">
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="PART_mouseoverbrush" Storyboard.TargetProperty="Opacity" To="0"
																											Duration="0:0:0.2"/>

         </Storyboard>
        </VisualState>
        <VisualState Name="MouseOver">
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="PART_mouseoverbrush" Storyboard.TargetProperty="Opacity" To=".1"
																											Duration="0:0:0.2"/>

         </Storyboard>
        </VisualState>
        <VisualState Name="Pressed">
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="PART_mouseoverbrush" Storyboard.TargetProperty="Opacity" To=".1"
																											Duration="0:0:0.2"/>

         </Storyboard>
        </VisualState>
        <VisualState Name="Disabled">
         <Storyboard>

         </Storyboard>
        </VisualState>
       </VisualStateGroup>
       <VisualStateGroup Name="FocusStates">
        <VisualState Name="Focused">
         <Storyboard>

         </Storyboard>
        </VisualState>
        <VisualState Name="Unfocused">
         <Storyboard>

         </Storyboard>
        </VisualState>

       </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid ClipToBounds="True">
       <i:Interaction.Behaviors>
        <converters:MouseTrackingBehavior/>
       </i:Interaction.Behaviors>
       <Grid.Background>
        <SolidColorBrush x:Name="PART_mouseoverbrush" Opacity="0" Color="White"/>
       </Grid.Background>
       <Canvas>
        <Canvas.RenderTransform>
         <TranslateTransform>
          <TranslateTransform.X>
           <MultiBinding Converter="{converters:RipplePlacementConverter}" ConverterParameter="{x:Static converters:Placement.X}">
            <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="(converters:Ripple.MousePosition)" RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}"/>
           </MultiBinding>
          </TranslateTransform.X>
          <TranslateTransform.Y>
           <MultiBinding Converter="{converters:RipplePlacementConverter}" ConverterParameter="{x:Static converters:Placement.Y}">
            <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="(converters:Ripple.MousePosition)" RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}"/>
           </MultiBinding>
          </TranslateTransform.Y>
         </TranslateTransform>
        </Canvas.RenderTransform>
        <Ellipse x:Name="PART_ripple" RenderTransformOrigin=".5,.5" VerticalAlignment="Center" HorizontalAlignment="Center ">
         <Ellipse.RenderTransform>
          <ScaleTransform x:Name="PART_ripplescale" ScaleX="0" ScaleY="0" />
         </Ellipse.RenderTransform>
         <Ellipse.Fill>
          <SolidColorBrush Color="White" Opacity=".15"/>
         </Ellipse.Fill>
         <Ellipse.Width>
          <MultiBinding Converter="{converters:CircleDiameterFitConverter}">
           <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
           <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
          </MultiBinding>
         </Ellipse.Width>
         <Ellipse.Height>
          <MultiBinding Converter="{converters:CircleDiameterFitConverter}">
           <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
           <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
          </MultiBinding>
         </Ellipse.Height>
        </Ellipse>
       </Canvas>
       <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
      </Grid>
     </Border>
     <ControlTemplate.Triggers>
      <EventTrigger RoutedEvent="Click">
       <BeginStoryboard>
        <Storyboard>
         <DoubleAnimation Storyboard.TargetName="PART_ripplescale" Storyboard.TargetProperty="ScaleX" From="0" To="1"
																											Duration="0:0:0.6" EasingFunction="{Ease Out, Quad}"/>

         <DoubleAnimation Storyboard.TargetName="PART_ripplescale" Storyboard.TargetProperty="ScaleY" From="0" To="1"
																											Duration="0:0:0.6" EasingFunction="{Ease Out, Quad}"/>

         <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ripple" Storyboard.TargetProperty="Opacity">
          <SplineDoubleKeyFrame Value="0" KeyTime="0:0:0.00"/>
          <SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.10"/>
          <SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.60"/>
          <SplineDoubleKeyFrame Value="0" KeyTime="0:0:0.75"/>
         </DoubleAnimationUsingKeyFrames>

        </Storyboard>
       </BeginStoryboard>
      </EventTrigger>
     </ControlTemplate.Triggers>
    </ControlTemplate>
   </Setter.Value>
  </Setter>
 </Style>

 <Style x:Key="FloatingButton" TargetType="{x:Type Button}">
  <Setter Property="Foreground" Value="{StaticResource mtGrey50}"/>
  <Setter Property="Background" Value="{StaticResource mtTealA400}"/>
  <Setter Property="BorderThickness" Value="0"/>
  <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
  <Setter Property="Width" Value="64"/>
  <Setter Property="Height" Value="64"/>
  <Setter Property="Template">
   <Setter.Value>
    <ControlTemplate TargetType="{x:Type Button}">
     <Border>
      <VisualStateManager.VisualStateGroups>
       <VisualStateGroup Name="CommonStates">
        <VisualState Name="Normal">
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="PART_shadow" Storyboard.TargetProperty="BlurRadius" To="8"
																											Duration="0:0:0.2"/>
          <DoubleAnimation Storyboard.TargetName="PART_shadow" Storyboard.TargetProperty="ShadowDepth" To="1.5"
																											Duration="0:0:0.2"/>
          <DoubleAnimation Storyboard.TargetName="PART_mouseoverbrush" Storyboard.TargetProperty="Opacity" To="0"
																											Duration="0:0:0.2"/>

         </Storyboard>
        </VisualState>
        <VisualState Name="MouseOver">
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="PART_shadow" Storyboard.TargetProperty="BlurRadius" To="14"
																											Duration="0:0:0.2"/>
          <DoubleAnimation Storyboard.TargetName="PART_shadow" Storyboard.TargetProperty="ShadowDepth" To="4.5"
																											Duration="0:0:0.2"/>
          <DoubleAnimation Storyboard.TargetName="PART_mouseoverbrush" Storyboard.TargetProperty="Opacity" To=".1"
																											Duration="0:0:0.2"/>

         </Storyboard>
        </VisualState>
        <VisualState Name="Pressed">
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="PART_shadow" Storyboard.TargetProperty="BlurRadius" To="14"
																											Duration="0:0:0.2"/>
          <DoubleAnimation Storyboard.TargetName="PART_shadow" Storyboard.TargetProperty="ShadowDepth" To="4.5"
																											Duration="0:0:0.2"/>
          <DoubleAnimation Storyboard.TargetName="PART_mouseoverbrush" Storyboard.TargetProperty="Opacity" To=".1"
																											Duration="0:0:0.2"/>

         </Storyboard>
        </VisualState>
        <VisualState Name="Disabled">
         <Storyboard>

         </Storyboard>
        </VisualState>
       </VisualStateGroup>
       <VisualStateGroup Name="FocusStates">
        <VisualState Name="Focused">
         <Storyboard>

         </Storyboard>
        </VisualState>
        <VisualState Name="Unfocused">
         <Storyboard>

         </Storyboard>
        </VisualState>

       </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid>
       <i:Interaction.Behaviors>
        <converters:MouseTrackingBehavior/>
       </i:Interaction.Behaviors>
       <Ellipse Fill="{TemplateBinding Background}">
        <Ellipse.Effect >
         <DropShadowEffect x:Name="PART_shadow" BlurRadius="8" ShadowDepth="1.5" Direction="270" 
																									Color="{StaticResource MaterialDesignShadow}" Opacity=".42"/>
        </Ellipse.Effect>
       </Ellipse>
       <Ellipse>
        <Ellipse.Fill>
         <SolidColorBrush x:Name="PART_mouseoverbrush" Opacity="0" Color="White"/>
        </Ellipse.Fill>
       </Ellipse>
       <Canvas>
        <Canvas.RenderTransform>
         <TranslateTransform>
          <TranslateTransform.X>
           <MultiBinding Converter="{converters:RippleTangentPlacementConverter}" ConverterParameter="{x:Static converters:Placement.X}">
            <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="(converters:Ripple.MousePosition)" RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}"/>
           </MultiBinding>
          </TranslateTransform.X>
          <TranslateTransform.Y>
           <MultiBinding Converter="{converters:RippleTangentPlacementConverter}" ConverterParameter="{x:Static converters:Placement.Y}">
            <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
            <Binding Path="(converters:Ripple.MousePosition)" RelativeSource="{RelativeSource FindAncestor, AncestorType=Grid}"/>
           </MultiBinding>
          </TranslateTransform.Y>
         </TranslateTransform>
        </Canvas.RenderTransform>
        <Ellipse x:Name="PART_ripple" RenderTransformOrigin=".5,.5" VerticalAlignment="Center" HorizontalAlignment="Center ">
         <Ellipse.RenderTransform>
          <ScaleTransform x:Name="PART_ripplescale" ScaleX="0" ScaleY="0"/>
         </Ellipse.RenderTransform>
         <Ellipse.Fill>
          <SolidColorBrush Color="White" Opacity=".3"/>
         </Ellipse.Fill>
         <Ellipse.Width>
          <MultiBinding Converter="{converters:CircleDiameterTangentFitConverter}">
           <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
           <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
          </MultiBinding>
         </Ellipse.Width>
         <Ellipse.Height>
          <MultiBinding Converter="{converters:CircleDiameterTangentFitConverter}">
           <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
           <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
          </MultiBinding>
         </Ellipse.Height>
        </Ellipse>
       </Canvas>
       <Viewbox>
        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
       </Viewbox>
      </Grid>
     </Border>
     <ControlTemplate.Triggers>
      <EventTrigger RoutedEvent="Click">
       <BeginStoryboard>
        <Storyboard>
         <DoubleAnimation Storyboard.TargetName="PART_ripplescale" Storyboard.TargetProperty="ScaleX" From="0" To="1"
																											Duration="0:0:0.6" EasingFunction="{Ease Out, Quad}"/>

         <DoubleAnimation Storyboard.TargetName="PART_ripplescale" Storyboard.TargetProperty="ScaleY" From="0" To="1"
																											Duration="0:0:0.6" EasingFunction="{Ease Out, Quad}"/>

         <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ripple" Storyboard.TargetProperty="Opacity">
          <SplineDoubleKeyFrame Value="0" KeyTime="0:0:0.00"/>
          <SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.10"/>
          <SplineDoubleKeyFrame Value="1" KeyTime="0:0:0.60"/>
          <SplineDoubleKeyFrame Value="0" KeyTime="0:0:0.75"/>
         </DoubleAnimationUsingKeyFrames>

        </Storyboard>
       </BeginStoryboard>
      </EventTrigger>
     </ControlTemplate.Triggers>
    </ControlTemplate>
   </Setter.Value>
  </Setter>
 </Style>

 <Style x:Key="FloatingButtonSmall" BasedOn="{StaticResource FloatingButton}" TargetType="Button">
  <Setter Property="Width" Value="56"/>
  <Setter Property="Height" Value="56"/>
 </Style>

 <Style x:Key="MaterialButton" TargetType="{x:Type Button}" BasedOn="{StaticResource t14pButton}">
  <Setter Property="Foreground">
   <Setter.Value>
    <Binding Path="(TextElement.Foreground)" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type FrameworkElement}}"/>
   </Setter.Value>
  </Setter>
  <Setter Property="Background" Value="{StaticResource mtTeal600}" />
  <Setter Property="BorderThickness" Value="0" />
  <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
  <Setter Property="Padding" Value="10 5"/>
  <Setter Property="primitives:VisualFeedback.ClickFeedback" Value="P050"/>
  <Setter Property="Template">
   <Setter.Value>
    <ControlTemplate TargetType="{x:Type Button}">
     <Border Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}">
      <Grid ClipToBounds="True"  >
       <Grid>
        <Ellipse Name="clickWave" RenderTransformOrigin=".5,.5"
												 VerticalAlignment="Center" HorizontalAlignment="Center">
         <Ellipse.Fill>
										<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="(primitives:VisualFeedback.Brush)"/>
          --><!--<MultiBinding Converter="{StaticResource l2bc}">
           <Binding Path="(primitives:ThemePrimitive.Theme)"/>
           <Binding Path="(primitives:VisualFeedback.ClickFeedback)"/>
          </MultiBinding>--><!--
         </Ellipse.Fill>
         <Ellipse.Width>
          <MultiBinding Converter="{StaticResource lvc}">
           <Binding Path="ActualWidth"/>
           <Binding Path="ActualHeight"/>
          </MultiBinding>
         </Ellipse.Width>
         <Ellipse.Height>
          <MultiBinding Converter="{StaticResource lvc}">
           <Binding Path="ActualWidth"/>
           <Binding Path="ActualHeight"/>
          </MultiBinding>
         </Ellipse.Height>
         <Ellipse.RenderTransform>
          <ScaleTransform x:Name="clickWaveScale" ScaleX="0" ScaleY="0"/>
         </Ellipse.RenderTransform>
        </Ellipse>
       </Grid>

       <ContentPresenter HorizontalAlignment="Center" Margin="{TemplateBinding Padding}"
																VerticalAlignment="Center"/>

      </Grid>
     </Border>

     <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
       <Setter Property="Foreground" Value="{Binding Path=(primitives:ThemePrimitive.Theme).P600}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
       <Setter Property="Foreground" Value="{StaticResource mtGrey400}"/>
      </Trigger>
      <EventTrigger RoutedEvent="Click">
       <EventTrigger.Actions>
        <BeginStoryboard>
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleX" 
																		 From="0" To="2.5" Duration="0:0:.3" />

          <DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleY" 
																		 From="0" To="2.5" Duration="0:0:.3" />

          <DoubleAnimation Storyboard.TargetName="clickWave" Storyboard.TargetProperty="Opacity" 
																		 From="1" To="0" Duration="0:0:.3" />
         </Storyboard>
        </BeginStoryboard>
       </EventTrigger.Actions>
      </EventTrigger>
     </ControlTemplate.Triggers>
    </ControlTemplate>
   </Setter.Value>
  </Setter>
 </Style>

	<Style x:Key="PathButton" TargetType="{x:Type Button}">
  <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1"/>
  <Setter Property="HorizontalContentAlignment" Value="Center"/>
  <Setter Property="VerticalContentAlignment" Value="Center"/>
  <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
  <Setter Property="Padding" Value="1"/>
		<Setter Property="ClipToBounds" Value="True"/>
  <Setter Property="Template">
   <Setter.Value>
    <ControlTemplate TargetType="{x:Type Button}">
     <Border Background="{TemplateBinding Background}">
      <Grid ClipToBounds="{TemplateBinding ClipToBounds}">
       <Grid>
        <Ellipse Name="clickWave" RenderTransformOrigin=".5,.5"
												 VerticalAlignment="Center" HorizontalAlignment="Center">
         <Ellipse.Fill>
										<Binding RelativeSource="{RelativeSource TemplatedParent}"  Path="(primitives:VisualFeedback.Brush)"/>
          --><!--<MultiBinding Converter="{StaticResource l2bc}">
           <Binding Path="(primitives:ThemePrimitive.Theme)"/>
           <Binding Path="(primitives:VisualFeedback.ClickFeedback)"/>
          </MultiBinding>--><!--
         </Ellipse.Fill>
         <Ellipse.Width>
          <MultiBinding Converter="{StaticResource lvc}">
           <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=Button}" Path="ActualWidth"/>
           <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=Button}" Path="ActualHeight"/>
          </MultiBinding>
         </Ellipse.Width>
         <Ellipse.Height>
          <MultiBinding Converter="{StaticResource lvc}">
           <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=Button}" Path="ActualWidth"/>
           <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=Button}" Path="ActualHeight"/>
          </MultiBinding>
         </Ellipse.Height>
         <Ellipse.RenderTransform>
          <ScaleTransform x:Name="clickWaveScale" ScaleX="0" ScaleY="0"/>
         </Ellipse.RenderTransform>
        </Ellipse>
       </Grid>

       <Viewbox>
        <ContentPresenter Name="icon" RenderTransformOrigin=".5,.5">
         <ContentPresenter.RenderTransform>
          <ScaleTransform x:Name="iconScale" ScaleX="1" ScaleY="1"/>
         </ContentPresenter.RenderTransform>
        </ContentPresenter>
       </Viewbox>

      </Grid>
     </Border>

     <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
       <Trigger.EnterActions>
        <BeginStoryboard>
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="iconScale" Storyboard.TargetProperty="ScaleX" 
																		 To="1.15" Duration="0:0:.15" />

          <DoubleAnimation Storyboard.TargetName="iconScale" Storyboard.TargetProperty="ScaleY" 
																		 To="1.15" Duration="0:0:.15" />
         </Storyboard>
        </BeginStoryboard>
       </Trigger.EnterActions>
       <Trigger.ExitActions>
        <BeginStoryboard>
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="iconScale" Storyboard.TargetProperty="ScaleX" 
																		 To="1" Duration="0:0:.15" />

          <DoubleAnimation Storyboard.TargetName="iconScale" Storyboard.TargetProperty="ScaleY" 
																		 To="1" Duration="0:0:.15" />
         </Storyboard>
        </BeginStoryboard>
       </Trigger.ExitActions>
      </Trigger>
      <Trigger Property="IsEnabled" Value="True">

       <Trigger.EnterActions>
        <BeginStoryboard>
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="icon" Storyboard.TargetProperty="Opacity" 
																		 To="1" Duration="0:0:.15" />
         </Storyboard>
        </BeginStoryboard>
       </Trigger.EnterActions>
       <Trigger.ExitActions>
        <BeginStoryboard>
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="icon" Storyboard.TargetProperty="Opacity" 
																		 To=".4" Duration="0:0:.15" />
         </Storyboard>
        </BeginStoryboard>
       </Trigger.ExitActions>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
       <Setter Property="IsHitTestVisible" Value="False"/>
       <Setter TargetName="icon"  Property="Opacity" Value=".4"/>

      </Trigger>

      <EventTrigger RoutedEvent="Click">
       <EventTrigger.Actions>
        <BeginStoryboard>
         <Storyboard>
          <DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleX" 
																		 From="0" To="2.5" Duration="0:0:.3" />

          <DoubleAnimation Storyboard.TargetName="clickWaveScale" Storyboard.TargetProperty="ScaleY" 
																		 From="0" To="2.5" Duration="0:0:.3" />

          <DoubleAnimation Storyboard.TargetName="clickWave" Storyboard.TargetProperty="Opacity" 
																		 From="1" To="0" Duration="0:0:.3" />
         </Storyboard>
        </BeginStoryboard>
       </EventTrigger.Actions>
      </EventTrigger>
     </ControlTemplate.Triggers>
    </ControlTemplate>
   </Setter.Value>
  </Setter>
 </Style>

 <Style x:Key="PathButtonDarkSurface" TargetType="{x:Type Button}" BasedOn="{StaticResource PathButton}">
  <Setter Property="primitives:VisualFeedback.ClickFeedback" Value="P600"/>
  <Setter Property="primitives:ThemePrimitive.Theme" Value="{StaticResource Grey}"/>
 </Style>-->


	
</ResourceDictionary>